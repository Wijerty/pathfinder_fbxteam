// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è HR —Å–∏—Å—Ç–µ–º—ã
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ–±–µ–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö

import { 
  getUnifiedHREmployeeData, 
  getHREmployeesByDepartment,
  getHREmployeesBySkill,
  searchHREmployees,
  HREmployeeData 
} from '../mocks/users'

// === –ü–†–ò–ú–ï–† 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤" ===
function getAllEmployeesForSearch(): HREmployeeData[] {
  const employees = getUnifiedHREmployeeData()
  
  console.log(`–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${employees.length}`)
  console.log('–ü–µ—Ä–≤—ã–µ 3 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:')
  
  employees.slice(0, 3).forEach(emp => {
    console.log(`
${emp.fullName} (${emp.position})`)
    console.log(`–û—Ç–¥–µ–ª: ${emp.department}`)
    console.log(`–£—Ä–æ–≤–µ–Ω—å: ${emp.level}`)
    console.log(`–ù–∞–≤—ã–∫–∏ (${emp.skillsStats.totalSkills}):`, 
      emp.skills.slice(0, 5).map(s => `${s.skillName} (${s.numericLevel}/5)`).join(', ')
    )
    console.log(`–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤: ${emp.skillsStats.averageLevel.toFixed(1)}/5`)
    console.log(`–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤: ${emp.skillsStats.expertSkills}`)
    console.log(`–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–æ—Ç–∞—Ü–∏–∏: ${emp.readinessForRotation ? '–î–∞' : '–ù–µ—Ç'}`)
  })
  
  return employees
}

// === –ü–†–ò–ú–ï–† 2: –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–≤—ã–∫–∞–º –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "One-click –ø–æ–¥–±–æ—Ä" ===
function findEmployeesForOneClickSelection() {
  console.log('\n=== ONE-CLICK –ü–û–î–ë–û–† ===\n')
  
  // –ü–æ–∏—Å–∫ React —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å —É—Ä–æ–≤–Ω–µ–º 4+
  const reactDevelopers = getHREmployeesBySkill('React', 4)
  console.log(`React —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ (—É—Ä–æ–≤–µ–Ω—å 4+): ${reactDevelopers.length}`)
  reactDevelopers.forEach(emp => {
    const reactSkill = emp.skills.find(s => s.skillName.includes('React'))
    console.log(`- ${emp.fullName}: React ${reactSkill?.numericLevel}/5 (${reactSkill?.yearsOfExperience} –ª–µ—Ç –æ–ø—ã—Ç–∞)`)
  })
  
  // –ü–æ–∏—Å–∫ Python —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
  const pythonExperts = getHREmployeesBySkill('Python', 3)
  console.log(`\nPython —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã (—É—Ä–æ–≤–µ–Ω—å 3+): ${pythonExperts.length}`)
  pythonExperts.forEach(emp => {
    const pythonSkill = emp.skills.find(s => s.skillName.includes('Python'))
    console.log(`- ${emp.fullName}: Python ${pythonSkill?.numericLevel}/5 (${emp.position})`)
  })
  
  // –ü–æ–∏—Å–∫ –ø–æ –æ—Ç–¥–µ–ª–∞–º
  const engineeringTeam = getHREmployeesByDepartment('Engineering')
  console.log(`\n–ö–æ–º–∞–Ω–¥–∞ Engineering: ${engineeringTeam.length} —á–µ–ª–æ–≤–µ–∫`)
  
  return { reactDevelopers, pythonExperts, engineeringTeam }
}

// === –ü–†–ò–ú–ï–† 3: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ===
function advancedEmployeeSearch() {
  console.log('\n=== –†–ê–°–®–ò–†–ï–ù–ù–´–ô –ü–û–ò–°–ö ===\n')
  
  const allEmployees = getUnifiedHREmployeeData()
  
  // –ü–æ–∏—Å–∫ senior —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–æ—Ç–∞—Ü–∏–∏
  const seniorReadyForRotation = allEmployees.filter(emp => 
    emp.level === 'senior' && emp.readinessForRotation
  )
  console.log(`Senior —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –≥–æ—Ç–æ–≤—ã–µ –∫ —Ä–æ—Ç–∞—Ü–∏–∏: ${seniorReadyForRotation.length}`)
  
  // –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  const searchResults = searchHREmployees('Frontend')
  console.log(`\n–ü–æ–∏—Å–∫ "Frontend": ${searchResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`)
  
  // –ê–Ω–∞–ª–∏–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø–æ –æ—Ç–¥–µ–ª–∞–º
  const departmentStats = ['Engineering', 'Data', 'Product', 'Design'].map(dept => {
    const deptEmployees = getHREmployeesByDepartment(dept)
    const avgSkillLevel = deptEmployees.reduce((sum, emp) => sum + emp.skillsStats.averageLevel, 0) / deptEmployees.length
    const totalExperts = deptEmployees.reduce((sum, emp) => sum + emp.skillsStats.expertSkills, 0)
    
    return {
      department: dept,
      employeeCount: deptEmployees.length,
      avgSkillLevel: avgSkillLevel.toFixed(1),
      totalExpertSkills: totalExperts
    }
  })
  
  console.log('\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–¥–µ–ª–∞–º:')
  departmentStats.forEach(stat => {
    console.log(`${stat.department}: ${stat.employeeCount} —Å–æ—Ç—Ä., —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å ${stat.avgSkillLevel}/5, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤: ${stat.totalExpertSkills}`)
  })
  
  return { seniorReadyForRotation, searchResults, departmentStats }
}

// === –ü–†–ò–ú–ï–† 4: –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≤—ã–∫–∞—Ö ===
function analyzeSkillsDistribution() {
  console.log('\n=== –ê–ù–ê–õ–ò–ó –ù–ê–í–´–ö–û–í ===\n')
  
  const allEmployees = getUnifiedHREmployeeData()
  
  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –Ω–∞–≤—ã–∫–∞–º
  const skillsMap = new Map<string, { count: number, levels: number[], avgLevel: number }>()
  
  allEmployees.forEach(emp => {
    emp.skills.forEach(skill => {
      if (!skillsMap.has(skill.skillName)) {
        skillsMap.set(skill.skillName, { count: 0, levels: [], avgLevel: 0 })
      }
      const skillStat = skillsMap.get(skill.skillName)!
      skillStat.count++
      skillStat.levels.push(skill.numericLevel)
    })
  })
  
  // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–µ —É—Ä–æ–≤–Ω–∏
  skillsMap.forEach((stat, skillName) => {
    stat.avgLevel = stat.levels.reduce((sum, level) => sum + level, 0) / stat.levels.length
  })
  
  // –¢–æ–ø-10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
  const topSkills = Array.from(skillsMap.entries())
    .sort((a, b) => b[1].count - a[1].count)
    .slice(0, 10)
  
  console.log('–¢–æ–ø-10 –Ω–∞–≤—ã–∫–æ–≤ –≤ –∫–æ–º–ø–∞–Ω–∏–∏:')
  topSkills.forEach(([skillName, stat], index) => {
    console.log(`${index + 1}. ${skillName}: ${stat.count} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å ${stat.avgLevel.toFixed(1)}/5`)
  })
  
  return { skillsMap, topSkills }
}

// === –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò ===
export function demonstrateHRDataUsage() {
  console.log('üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–ù–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–û–ì–û –ú–ê–°–°–ò–í–ê –î–ê–ù–ù–´–• HR –°–ò–°–¢–ï–ú–´')
  console.log('=' .repeat(60))
  
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã
    const allEmployees = getAllEmployeesForSearch()
    const oneClickResults = findEmployeesForOneClickSelection()
    const advancedResults = advancedEmployeeSearch()
    const skillsAnalysis = analyzeSkillsDistribution()
    
    console.log('\n‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
    console.log(`üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
    console.log(`   - –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${allEmployees.length}`)
    console.log(`   - React —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: ${oneClickResults.reactDevelopers.length}`)
    console.log(`   - Python —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: ${oneClickResults.pythonExperts.length}`)
    console.log(`   - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤: ${skillsAnalysis.skillsMap.size}`)
    
    return {
      success: true,
      totalEmployees: allEmployees.length,
      skillsCount: skillsAnalysis.skillsMap.size,
      departmentStats: advancedResults.departmentStats
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error)
    return { success: false, error: error instanceof Error ? error.message : String(error) }
  }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
// demonstrateHRDataUsage()