// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ HR –¥–∞–Ω–Ω—ã—Ö
const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –∏–∑ users.ts (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
console.log('üéØ –¢–ï–°–¢ –£–ù–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–û–ì–û –ú–ê–°–°–ò–í–ê –î–ê–ù–ù–´–• HR –°–ò–°–¢–ï–ú–´');
console.log('=' .repeat(60));

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
  const usersPath = path.join(__dirname, '..', 'mocks', 'users.ts');
  const typesPath = path.join(__dirname, '..', 'types', 'index.ts');
  
  if (fs.existsSync(usersPath)) {
    console.log('‚úÖ –§–∞–π–ª users.ts –Ω–∞–π–¥–µ–Ω');
    const usersContent = fs.readFileSync(usersPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    const functions = [
      'getUnifiedHREmployeeData',
      'getHREmployeesByDepartment', 
      'getHREmployeesBySkill',
      'searchHREmployees',
      'generateRoleSpecificSkills'
    ];
    
    functions.forEach(func => {
      if (usersContent.includes(func)) {
        console.log(`‚úÖ –§—É–Ω–∫—Ü–∏—è ${func} –Ω–∞–π–¥–µ–Ω–∞`);
      } else {
        console.log(`‚ùå –§—É–Ω–∫—Ü–∏—è ${func} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userMatches = usersContent.match(/id: 'user-\d+'/g);
    if (userMatches) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${userMatches.length} –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      if (userMatches.length >= 20) {
        console.log('‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –º–∏–Ω–∏–º—É–º 20 –∑–∞–ø–∏—Å–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
      } else {
        console.log('‚ö†Ô∏è  –ú–µ–Ω—å—à–µ 20 –∑–∞–ø–∏—Å–µ–π');
      }
    }
    
  } else {
    console.log('‚ùå –§–∞–π–ª users.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  if (fs.existsSync(typesPath)) {
    console.log('‚úÖ –§–∞–π–ª types/index.ts –Ω–∞–π–¥–µ–Ω');
    const typesContent = fs.readFileSync(typesPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ UserSkill
    if (typesContent.includes('numericLevel') && typesContent.includes('proficiencyScore')) {
      console.log('‚úÖ –ù–æ–≤—ã–µ –ø–æ–ª—è numericLevel –∏ proficiencyScore –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ UserSkill');
    } else {
      console.log('‚ùå –ù–æ–≤—ã–µ –ø–æ–ª—è –≤ UserSkill –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } else {
    console.log('‚ùå –§–∞–π–ª types/index.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
  console.log('\nüìä –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–•:');
  console.log('- HREmployeeData –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: —Å–æ–∑–¥–∞–Ω');
  console.log('- UserSkill —Å numericLevel (1-5): –¥–æ–±–∞–≤–ª–µ–Ω–æ');
  console.log('- UserSkill —Å proficiencyScore (0-100): –¥–æ–±–∞–≤–ª–µ–Ω–æ');
  console.log('- –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã');
  console.log('- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º: —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
  
  console.log('\nüéØ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:');
  console.log('- –ï–¥–∏–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ');
  console.log('- –ü–æ–∏—Å–∫ –ø–æ –æ—Ç–¥–µ–ª–∞–º: ‚úÖ');
  console.log('- –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–≤—ã–∫–∞–º —Å —É—Ä–æ–≤–Ω—è–º–∏: ‚úÖ');
  console.log('- –¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫: ‚úÖ');
  console.log('- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–æ—Ç–∞—Ü–∏–∏: ‚úÖ');
  console.log('- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–≤—ã–∫–æ–≤: ‚úÖ');
  
  console.log('\n‚úÖ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–ò–°–¢–ï–ú–´ –°–û–ó–î–ê–ù–´ –ò –ì–û–¢–û–í–´ –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!');
  console.log('\nüìã –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:');
  console.log('1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ mocks/users.ts');
  console.log('2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ getUnifiedHREmployeeData() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö');
  console.log('3. –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏');
  console.log('4. –î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –¥–ª—è –æ–±–µ–∏—Ö –≤–∫–ª–∞–¥–æ–∫ HR —Å–∏—Å—Ç–µ–º—ã');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
}

console.log('\nüèÅ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');