'use client'

import React, { useState } from 'react'
import { useRouter } from 'next/navigation'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { UserRole } from '@/types'
import { demoUsers } from '@/mocks'
import { useStore } from '@/domain/state/store'
import { Users, Shield, Settings, Briefcase } from 'lucide-react'

export default function AuthPage() {
  const router = useRouter()
  const [selectedRole, setSelectedRole] = useState<UserRole | null>(null)
  const [isLoading, setIsLoading] = useState(false)
  const login = useStore(state => state.login)

  const roleInfo = {
    employee: {
      icon: <Briefcase className="h-8 w-8" />,
      title: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
      description: '–î–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É, —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º',
      features: [
        '–õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞–≤—ã–∫–∏',
        '–ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∫–∞—Ä—å–µ—Ä–µ',
        '–ö–≤–µ—Å—Ç—ã –∏ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é',
        '–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ'
      ],
      color: 'bg-blue-500',
      demoUser: demoUsers.employee
    },
    hr: {
      icon: <Users className="h-8 w-8" />,
      title: 'HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
      description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ–∏—Å–∫–∞, –ø–æ–¥–±–æ—Ä–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–∞–Ω–¥—ã',
      features: [
        '–ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
        'One-click –ø–æ–¥–±–æ—Ä –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤',
        '–ê–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏',
        'HR-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏',
        '–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–∞'
      ],
      color: 'bg-green-500',
      demoUser: demoUsers.hr
    },
    admin: {
      icon: <Settings className="h-8 w-8" />,
      title: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π, —Ç–∞–∫—Å–æ–Ω–æ–º–∏–µ–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏',
      features: [
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞–º–∏ –∏ —Ä–æ–ª—è–º–∏',
        '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        '–°–∏—Å—Ç–µ–º–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        'Feature flags –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
        '–ê—É–¥–∏—Ç –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ'
      ],
      color: 'bg-purple-500',
      demoUser: demoUsers.admin
    }
  }

  const handleLogin = async (role: UserRole) => {
    try {
      setIsLoading(true)
      setSelectedRole(role)
      
      const demoUser = roleInfo[role].demoUser
      
      if (!demoUser) {
        throw new Error(`–î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ä–æ–ª–∏ ${role} –Ω–µ –Ω–∞–π–¥–µ–Ω`)
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π authSlice –¥–ª—è –≤—Ö–æ–¥–∞
      await login(demoUser)
      
      // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      const routes = {
        employee: '/employee',
        hr: '/hr', 
        admin: '/admin'
      }
      
      router.push(routes[role])
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error)
      alert(`–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsLoading(false)
      setSelectedRole(null)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <div className="w-full max-w-6xl">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="w-12 h-12 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
              <Shield className="h-7 w-7 text-white" />
            </div>
            <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              PathFinder
            </h1>
          </div>
          <p className="text-xl text-gray-600 mb-2">
            –ò–ò HR-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è
          </p>
          <p className="text-gray-500">
            –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
          </p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–æ–ª–µ–π */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          {Object.entries(roleInfo).map(([role, info]) => (
            <Card 
              key={role}
              className={`cursor-pointer transition-all duration-200 hover:shadow-lg transform hover:-translate-y-1 ${
                selectedRole === role ? 'ring-2 ring-blue-500 shadow-lg' : ''
              }`}
              onClick={() => setSelectedRole(role as UserRole)}
            >
              <CardHeader className="text-center pb-4">
                <div className={`w-16 h-16 ${info.color} rounded-full flex items-center justify-center mx-auto mb-4 text-white`}>
                  {info.icon}
                </div>
                <CardTitle className="text-xl">{info.title}</CardTitle>
                <p className="text-sm text-gray-600 mt-2">{info.description}</p>
              </CardHeader>
              
              <CardContent>
                <div className="space-y-2 mb-4">
                  {info.features.map((feature, index) => (
                    <div key={index} className="flex items-start gap-2 text-sm">
                      <div className="w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                      <span className="text-gray-600">{feature}</span>
                    </div>
                  ))}
                </div>
                
                <div className="border-t pt-4">
                  <div className="text-xs text-gray-500 mb-2">–î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</div>
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                      <Users className="h-4 w-4 text-gray-600" />
                    </div>
                    <div>
                      <div className="text-sm font-medium">{info.demoUser.displayName}</div>
                      <div className="text-xs text-gray-500">{info.demoUser.position}</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ */}
        {selectedRole && (
          <div className="text-center">
            <Button 
              size="lg" 
              onClick={() => handleLogin(selectedRole)}
              disabled={isLoading}
              className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-3 text-lg font-medium disabled:opacity-50"
            >
              {isLoading ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...
                </>
              ) : (
                `–í–æ–π—Ç–∏ –∫–∞–∫ ${roleInfo[selectedRole].title}`
              )}
            </Button>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–º–æ */}
        <div className="mt-8 p-4 bg-white/50 rounded-lg border border-gray-200">
          <div className="flex items-start gap-3">
            <div className="w-6 h-6 bg-yellow-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
              <span className="text-yellow-600 text-sm">‚Ñπ</span>
            </div>
            <div className="text-sm text-gray-600">
              <p className="font-medium mb-1">–î–µ–º–æ-—Ä–µ–∂–∏–º</p>
              <p>
                –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è PathFinder —Å mock –¥–∞–Ω–Ω—ã–º–∏. 
                –í—Å–µ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–∏, –≥–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —Å–∏–º—É–ª—è—Ü–∏–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. 
                –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å Scibox/–ª–æ–∫–∞–ª—å–Ω—ã–º–∏ LLM, STT/TTS —Å–µ—Ä–≤–∏—Å–∞–º–∏ –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.
              </p>
              <div className="flex gap-2 mt-2">
                <Badge variant="outline" className="text-xs">Mock LLM</Badge>
                <Badge variant="outline" className="text-xs">Mock STT/TTS</Badge>
                <Badge variant="outline" className="text-xs">Demo Data</Badge>
              </div>
            </div>
          </div>
        </div>

        {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã */}
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div className="bg-white/30 p-3 rounded border border-gray-200">
            <h4 className="font-medium text-gray-800 mb-2">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h4>
            <p className="text-gray-600">
              On-prem —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º –∫–æ–Ω—Ç—É—Ä–µ, 
              –Ω–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>
          <div className="bg-white/30 p-3 rounded border border-gray-200">
            <h4 className="font-medium text-gray-800 mb-2">üéØ –ò–ò-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</h4>
            <p className="text-gray-600">
              –ì–ª—É–±–æ–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ò–ò –≤ –∫–∞–∂–¥—ã–π —ç–∫—Ä–∞–Ω, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, 
              –≥–æ–ª–æ—Å–æ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ, –æ–±—ä—è—Å–Ω–∏–º–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–π.
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}
